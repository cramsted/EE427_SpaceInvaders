/*
 * clock.c
 *
 *  Created on: Oct 4, 2016
 *      Author: superman
 */

#include "xgpio.h"          // Provides access to PB GPIO driver.
#include <stdio.h>          // xil_printf and so forth.
#include "mb_interface.h"   // provides the microblaze interrupt enables, etc.
#include "xintc_l.h"        // Provides handy macros for the interrupt controller.
#include "clock.h"

#define ONE_SECOND_COUNT 100
#define HALF_SECOND_COUNT 50
#define DEBOUNCE_TIME 5
#define SECONDS_BUTTON 0x02
#define MINS_BUTTON 0x01
#define HOURS_BUTTON 0x08
#define INCREMENT_BUTTON 0x10
#define DECREMENT_BUTTON 0x04
#define MINS_SECONDS_MAX 59
#define HOURS_MAX 23
#define PRINT_TIME 	xil_printf("%02d:%02d:%02d\r",hours,mins,seconds)
#define INCREMENT(buttonState) (buttonState & INCREMENT_BUTTON)
#define DECREMENT(buttonState) (buttonState & DECREMENT_BUTTON)

XGpio gpLED; // This is a handle for the LED GPIO block.
XGpio gpPB; // This is a handle for the push-button GPIO block.

static void increment_seconds(int rollover);
static void increment_mins(int rolloever);
static void increment_hours();
static void decrement_seconds(int rollover);
static void decrement_mins(int rolloever);
static void decrement_hours();
static void modify_time(u32 timeButton);

static int hours = 0;
static int mins = 0;
static int seconds = 0;
static int debounceCounter = 0;
static int inc_dec_hold_counter = 0;
static u32 currentButtonState;
static s32 asdf;

void clockInit() {

}


