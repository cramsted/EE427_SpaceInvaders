/*
 * timer.c
 *
 *  Created on: Oct 4, 2016
 *      Author: superman
 */

#include "xgpio.h"          // Provides access to PB GPIO driver.
#include <stdio.h>          // xil_printf and so forth.
#include "mb_interface.h"   // provides the microblaze interrupt enables, etc.
#include "xintc_l.h"        // Provides handy macros for the interrupt controller.
#include "timer.h"
#include <stdint.h>

// Timing/clock constants
#define ONE_SECOND_COUNT 100 // timer ticks in one second
#define BUTTON_POLL_COUNT 3 // 30 ms
#define BULLETS_UPDATE_COUNT 3 // 30 ms refresh rate for bullets
#define ALIENS_UPDATE_COUNT 33 // 330 ms refresh rate for aliens

// appear about every 30 seconds
// scuttle across the screen in 10-15 seconds
#define UFO_UPDATE_COUNT // TODO do this

// Bit masks
#define RIGHT_BUTTON 0x02
#define MIDDLE_BUTTON 0x01
#define LEFT_BUTTON 0x08

// global variables
static uint32_t buttonCounter;
static uint32_t bulletsCount;
static uint32_t aliensCounter;
static xgpio gpPB;

// This is invoked in response to a timer interrupt every 10 ms.
void timerInterruptHandler() {
}

// Main interrupt handler, queries the interrupt controller to see what peripheral
// fired the interrupt and then dispatches the corresponding interrupt handler.
void interrupt_handler_dispatcher(void* ptr) {
	int32_t intc_status = XIntc_GetIntrStatus(XPAR_INTC_0_BASEADDR);
	// Check the FIT interrupt first.
	if (intc_status & XPAR_FIT_TIMER_0_INTERRUPT_MASK) {
		XIntc_AckIntr(XPAR_INTC_0_BASEADDR, XPAR_FIT_TIMER_0_INTERRUPT_MASK);
		timerInterruptHandler();
	}
}

void timerInit() {
	// Initialize the GPIO peripherals.
	int32_t success;
	success = XGpio_Initialize(&gpPB, XPAR_PUSH_BUTTONS_5BITS_DEVICE_ID);
	// Set the push button peripheral to be inputs.
	XGpio_SetDataDirection(&gpPB, 1, 0x0000001F);

	// Initialize interrupts - only have the FIT interrupt
	microblaze_register_handler(interrupt_handler_dispatcher, NULL);
	XIntc_EnableIntr(XPAR_INTC_0_BASEADDR, XPAR_FIT_TIMER_0_INTERRUPT_MASK);
	XIntc_MasterEnable(XPAR_INTC_0_BASEADDR);
	microblaze_enable_interrupts();

	buttonCounter = BUTTON_POLL_COUNT;
	bulletsCount = BULLETS_UPDATE_COUNT;
	aliensCounter = ALIENS_UPDATE_COUNT;
